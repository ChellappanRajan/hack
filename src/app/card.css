.cards {
  list-style: none;
  outline: calc(var(--outline-width) * 10) solid hotpink;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--numcards), var(--card-height));
  gap: var(--card-margin);
}
.card {
  width: 770px;
  height: 390px;
  /* backdrop-filter: blur(10px); */
  backdrop-filter: blur(8px);
  background: rgb(30 41 59 / 0.75);

  /* background: rgba(30, 30, 30, 0.25); */
  /* backdrop-filter: blur(10px); */
  border-radius: 20px;
  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(70, 70, 70, 0.2);
  padding: 40px;
  overflow: hidden;
}

#cards {
  /* Make place at bottom, as items will slide to that position*/
  padding-bottom: calc(var(--numcards) * var(--card-top-offset));
  /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
  margin-bottom: var(--card-margin);
}

#card_1 {
  --index: 1;
}

#card_2 {
  --index: 2;
}

#card_3 {
  --index: 3;
}

#card_4 {
  --index: 4;
}
#card_5 {
  --index: 5;
}
#card_6 {
  --index: 6;
}
.card {
  position: sticky;
  top: 120px;
  padding-top: calc(var(--index) * var(--card-top-offset));
}

.speaker-img {
  width: 300px;
  object-fit: cover;
  border-radius: 30px !important;
}

.card {
  display: flex;
}
@property --_x {
  syntax: "<length>";
  inherits: true;
  initial-value: 0px;
}
figure {
  --w: 280px; /* image width */
  --r: 0.5em; /* radius */

  display: grid;
  place-items: end end;
  font: bold 40px/1.5 monospace;
  transition: --_x 0.5s;
  cursor: pointer;
  margin: 0;
}
figure.alt {
  place-items: end start;
}
figure > * {
  grid-area: 1/1;
}
figure {
  --_x: calc(var(--w) - 3 * var(--r) - 0.5lh);
}
figure img {
  width: var(--w);
  aspect-ratio: 1;
  border-radius: var(--r);
  --_m: /calc(2 * var(--r)) calc(2 * var(--r))
    radial-gradient(#000 69%, #0000 72%);
  --_g: conic-gradient(
    from 90deg at calc(100% - var(--r)) calc(100% - var(--r)),
    #0000 25%,
    #000 0
  );
  --_d: (0.5lh + var(--r));
  mask:
    calc(100% - var(--_d) - var(--_x)) 100% var(--_m),
    100% calc(100% - var(--_d)) var(--_m),
    radial-gradient(0.5lh at 100% 100%, #0000 99%, #000 calc(100% + 1px))
      calc(-1 * var(--r) - var(--_x)) calc(-1 * var(--r)),
    var(--_g) calc(-1 * var(--_d) - var(--_x)) 0,
    var(--_g) 0 calc(-1 * var(--_d));
  mask-repeat: no-repeat;
}
figure.alt img {
  --_g: conic-gradient(
    from 180deg at var(--r) calc(100% - var(--r)),
    #0000 25%,
    #000 0
  );
  mask:
    calc(var(--_d) + var(--_x)) 100% var(--_m),
    0% calc(100% - var(--_d)) var(--_m),
    radial-gradient(0.5lh at 0 100%, #0000 99%, #000 calc(100% + 1px))
      calc(var(--r) + var(--_x)) calc(-1 * var(--r)),
    var(--_g) calc(var(--_d) + var(--_x)) 0,
    var(--_g) 0 calc(-1 * var(--_d));
  mask-repeat: no-repeat;
}
figure figcaption {
  height: 1lh;
  width: calc(1lh + var(--_x));
  box-sizing: border-box;
  translate: calc(0.5lh - var(--r)) calc(0.5lh - var(--r));
  overflow: hidden;
  background: rgb(20, 136, 252);
  color: #fff;
  border-inline: calc(0.5lh - 0.5ch) solid #0000;
  clip-path: inset(5px round 1lh);
  text-align: center;
  letter-spacing: 1px;
}
figure.alt figcaption {
  translate: calc(-0.5lh + var(--r)) calc(0.5lh - var(--r));
}

@supports (animation-timeline: view()) {
  .card {
    --index0: calc(var(--index) - 1); /* 0-based index */
    --reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
    --reverse-index0: calc(
      var(--reverse-index) - 1
    ); /* 0-based reverse index */
  }

  @keyframes scale {
    to {
      transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
    }
  }

  #cards {
    --numcards: 6;
    view-timeline-name: --cards-element-scrolls-in-body;
  }

  .card__content {
    --start-range: calc(var(--index0) / var(--numcards) * 100%);
    --end-range: calc((var(--index)) / var(--numcards) * 100%);

    animation: linear scale forwards;
    animation-timeline: --cards-element-scrolls-in-body;
    animation-range: exit-crossing var(--start-range) exit-crossing
      var(--end-range);
  }
}

.card__content {
  display: grid;
  grid-template-areas: "text img";
  grid-template-columns: 1fr 1fr;
  grid-template-rows: auto;
  align-items: stretch;
}
